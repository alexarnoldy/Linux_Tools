sudo virsh net-dhcp-leases default
* See DHCP addresses leased on the network named default

https://computingforgeeks.com/virsh-commands-cheatsheet/
* virt-ls and virt-cat 
** To ls directories and cat files in a running VM

virsh dominfo <name of domain>
* Config of the VM

sudo virsh domifaddr <name of domain>
* IP and MAC of VM


.Expand a .qcow2 image, plus the internal partitions and filesystems:
* Likely won't work if the image has snapshots
* Seems like you need to do the whole procedure once for each partition that needs to be expanded

* With the VM booted, use df -h to determine which partition number need to be expanded
** Note that they may be /dev/vda* but the libvirt commands will refer to them as /dev/sda. 
   The most important thing is the partition number.
* Power off VM

`IMAGE=<image.qcow2>`
`PARTITION_NUMBER=<#>`
`virt-filesystems --long -h --all -a $IMAGE`

* Make a copy of the image before starting. I've munged up several images trying this and wish I had made a copy first.
`cp $IMAGE /var/tmp/`

* Check the image:
`qemu-img check -r all $IMAGE`

The variable below is a number, i.e. 2, plus a letter 
  designator for megabytes, gigabytes, terabyes, i.e. G. 
**  `export CAPACITY_TO_ADD=2G` would be used to add two gigabytes to the image:
`export CAPACITY_TO_ADD=<#><M,G,T>`
`qemu-img resize $IMAGE +$CAPACITY_TO_ADD`

* Verify the logical image size has grown, though the partitions have not:
`virt-filesystems --long -h --all -a $IMAGE`



* Expand the partition and filesystem:
`cp $IMAGE $IMAGE-orig`
`virt-resize --expand /dev/sda$PARTITION_NUMBER $IMAGE-orig $IMAGE`

* Verify the correct partition has taken up the desired capacity
`virt-filesystems --long -h --all -a $IMAGE`

* Boot the image and verify the image, partition, and filesystem have been expanded
** If everything works, you can delete the $IMAGE-orig and the copy in /var/tmp/
`rm $IMAGE-orig /var/tmp/$IMAGE`


